const { cleanHeaders, cleanQueryParams, cleanBody } = require('./clean');
const { removeAutoGeneratedHeaders, getContentTypeFromHeader } = require('./httpHelpers');

function extractRequestDetails(req) {
    return {
        req_method: req.method,
        req_path_param: req.originalUrl.split('?')[0],
        req_header: req.headers,
        req_body: req.body,
        req_query_param: req.query,
        cookies: req.cookies,
    };
}

function normalizeHeaderName(header) {
    return header
        .toLowerCase()
        .split('-')
        .map(part => part.charAt(0).toUpperCase() + part.slice(1))
        .join('-');
}

function formatHeadersToString(headersObj) {
    if (!headersObj || typeof headersObj !== 'object') return '';

    return Object.entries(headersObj)
        .map(([key, value]) => {
            const normalizedKey = normalizeHeaderName(key);
            return `${normalizedKey}: ${value}`;
        })
        .join('\n');
}



function convertQueryParamsToString(rawParams) {
    if (!rawParams || typeof rawParams !== 'object') return '';

    return Object.entries(rawParams)
        .map(([key, value]) => `${key}=${value}`)
        .join('&');
}

function cleanRequestData(rawData) {
    let result = rawData;
    let tempHdr = removeAutoGeneratedHeaders(rawData.req_header);
    let strHdr = formatHeadersToString(tempHdr);
    result.req_header = cleanHeaders(strHdr);

    let qryStr = convertQueryParamsToString(rawData.req_query_param);
    result.req_query_param = cleanQueryParams(qryStr);
    const reqContentType = getContentTypeFromHeader(result.req_header);
    result.req_body = cleanBody(rawData.req_body, reqContentType)
    return result;

}

module.exports = {
    extractRequestDetails,
    cleanRequestData
};
