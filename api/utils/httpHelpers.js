function getContentTypeFromHeader(headers) {
    if (!headers || typeof headers !== 'string') return '';
    return headers.split('\n').reduce((found, line) => {
        const [key, ...rest] = line.split(':');
        return key.trim().toLowerCase() === 'content-type' ? rest.join(':').trim() : found;
    }, '');
}

function removeAutoGeneratedHeaders(headersObj) {
    const autoGenerated = new Set([
        'host', 'connection', 'user-agent', 'accept', 'accept-encoding', 'accept-language',
        'content-length', 'transfer-encoding', 'date', 'via', 'x-forwarded-for',
        'x-forwarded-host', 'x-forwarded-proto', 'te', 'upgrade-insecure-requests',
        'sec-fetch-mode', 'sec-fetch-site', 'sec-fetch-dest', 'sec-fetch-user',
        'origin', 'referer', 'postman-token', 'cache-control'
    ]);

    return Object.fromEntries(
        Object.entries(headersObj)
            .filter(([key]) => !autoGenerated.has(key.toLowerCase()))
    );
}

module.exports = {
    getContentTypeFromHeader,
    removeAutoGeneratedHeaders
};
